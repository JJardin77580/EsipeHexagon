package GoleConquest;

import java.awt.Color;

import hexalib.HexaGrid;
import hexalib.HexagonPanel;
import hexalib.Hexalib.HexaGridView;
import GoleConquest.Hexagon.DataHexagon;
import GoleConquest.Hexagon.HexagonRender;


public class Main {
	private static int min = -1;
	private static int max =  1;
	public static void main(String[] args) {
		//cr√©ation d'une grile comprenant des hexagones
		HexaGrid<DataHexagon> hexagonGrid=new HexaGrid<>(min,min, max, max);
		//gestion de l'hexagone (son rendu visuel)
		HexagonRender render=new HexagonRender(30);
		HexaGridView<DataHexagon> hexagridview= new HexaGridView<>(hexagonGrid,render);

		int i=0;
		int lim=0;
		Player p1=new Player("Adrien", Color.GREEN);
		//Player p2=new Player("Jeff", Color.YELLOW);
		for (int q=min;q<=max;q++) {
			for (int r = min; r <=max; r++) {
				lim=q+r;
				if((lim>=hexagonGrid.getMinQ())&&(lim<=hexagonGrid.getMaxQ())){
					DataHexagon data = new DataHexagon(i,p1);
					hexagonGrid.setData(q, r,data);
					i++;
					hexagridview.addHexagonView(q, r, new HexagonPanel());
					
					
					/*hexagonGrid.setData(q, r,i);
					i++;
					Random rand = new Random();
					int nb = rand.nextInt(8);
					Hexagon hexPan = new Hexagon(HexagonType.values()[nb]);
					hexagridView.addHexagonView(q, r, hexPan);*/
				}
				
			}
		}
		Fenetre f=new Fenetre(hexagridview,hexagonGrid);
	}

}
